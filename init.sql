-- MySQL Script generated by MySQL Workbench
-- 11/23/16 20:43:52
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema billets-en-concert
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema billets-en-concert
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `billets-en-concert` DEFAULT CHARACTER SET utf8mb4 ;
SHOW WARNINGS;
USE `billets-en-concert` ;

-- -----------------------------------------------------
-- Table `billets-en-concert`.`PLACES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billets-en-concert`.`PLACES` (
  `PLACE_ID` BIGINT NOT NULL COMMENT '',
  `NAME` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`PLACE_ID`)  COMMENT '')
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `billets-en-concert`.`LIVES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billets-en-concert`.`LIVES` (
  `LIVE_ID` BIGINT NOT NULL COMMENT '',
  `LIVE_TITLE` VARCHAR(45) NOT NULL COMMENT '',
  `DATE` DATE NOT NULL COMMENT '',
  `START_TIME` TIME NULL COMMENT '',
  `END_TIME` TIME NULL COMMENT '',
  `PLACE_ID` BIGINT NOT NULL COMMENT '',
  PRIMARY KEY (`LIVE_ID`)  COMMENT '',
  CONSTRAINT `fk_LIVE_PLACE`
    FOREIGN KEY (`PLACE_ID`)
    REFERENCES `billets-en-concert`.`PLACES` (`PLACE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_LIVE_PLACE_idx` ON `billets-en-concert`.`LIVES` (`PLACE_ID` ASC)  COMMENT '';

SHOW WARNINGS;
CREATE UNIQUE INDEX `DATE_UNIQUE` ON `billets-en-concert`.`LIVES` (`DATE` ASC)  COMMENT '';

SHOW WARNINGS;
CREATE UNIQUE INDEX `LIVE_TITLE_UNIQUE` ON `billets-en-concert`.`LIVES` (`LIVE_TITLE` ASC)  COMMENT '';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `billets-en-concert`.`ARTISTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billets-en-concert`.`ARTISTS` (
  `ARTIST_ID` BIGINT NOT NULL COMMENT '',
  `ARTIST_NAME` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`ARTIST_ID`)  COMMENT '')
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `ARTIST_NAME_UNIQUE` ON `billets-en-concert`.`ARTISTS` (`ARTIST_NAME` ASC)  COMMENT '';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `billets-en-concert`.`LIVES_has_ARTISTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billets-en-concert`.`LIVES_has_ARTISTS` (
  `LIVES_LIVE_ID` BIGINT NOT NULL COMMENT '',
  `ARTISTS_ARTIST_ID` BIGINT NOT NULL COMMENT '',
  PRIMARY KEY (`LIVES_LIVE_ID`, `ARTISTS_ARTIST_ID`)  COMMENT '',
  CONSTRAINT `fk_LIVES_has_ARTISTS_LIVES1`
    FOREIGN KEY (`LIVES_LIVE_ID`)
    REFERENCES `billets-en-concert`.`LIVES` (`LIVE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_LIVES_has_ARTISTS_ARTISTS1`
    FOREIGN KEY (`ARTISTS_ARTIST_ID`)
    REFERENCES `billets-en-concert`.`ARTISTS` (`ARTIST_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_LIVES_has_ARTISTS_ARTISTS1_idx` ON `billets-en-concert`.`LIVES_has_ARTISTS` (`ARTISTS_ARTIST_ID` ASC)  COMMENT '';

SHOW WARNINGS;
CREATE INDEX `fk_LIVES_has_ARTISTS_LIVES1_idx` ON `billets-en-concert`.`LIVES_has_ARTISTS` (`LIVES_LIVE_ID` ASC)  COMMENT '';

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
